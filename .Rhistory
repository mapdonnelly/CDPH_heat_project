df.census<-df.census[,c(1,2,7,8,11:15)]
df.census<-df.census[,-1]
df.census<-df.census[-9,]
###filling in the census tract data for the observation that was not originally geocoded: DOW005-> same census tract at DOW015
df.census[is.na(df.census$GEOID),]$GEOID<-6037551000
df.census[df.census$GEOID==6037551000,]$median_income <-72927
df.census[df.census$GEOID==6037551000,]$pop_density <-7909.9
#df.census<-unique(df.census)
df.scaled.census<-readRDS("df.scaled.mean.census.var.RDS")
df.scaled.census<-df.scaled.census[,c(1,2,7:9,12:15)]
df.scaled.census<-df.scaled.census[,-1]
df.scaled.census[is.na(df.scaled.census$GEOID),]$GEOID<-6037551000
df.scaled.census[df.scaled.census$GEOID==6037551000,]$median_income <-0.7224535
df.scaled.census[df.scaled.census$GEOID==6037551000,]$pop_density <- -0.38155650
df.scale<-merge(geoid, df.scale, by = "collection_id")
df.scale[is.na(df.scale$GEOID),]$GEOID<-6037551000
#df.scaled.census<-unique(df.scaled.census)
library(dplyr)
df.reg$GEOID<-as.factor(df.reg$GEOID)
df.scale$GEOID<-as.factor(df.scale$GEOID)
df.census$GEOID<-as.factor(df.census$GEOID)
df.merge <- df.scaled.census%>%
dplyr::select(city, median_income, pop_density, GEOID) %>%
distinct() %>%
right_join(df.scale, by = "GEOID")
library(lme4)
library(arm)
##create vectors for all of the variables to use in hierarchical models
total_aegypti_outside_10<-df.merge$total_aegypti_outside_10
total_aegypti_inside_10<-df.merge$total_aegypti_inside_10
yard_maintenance_times_per_month<-df.merge$yard_maintenance_times_per_month
GEOID<-df.merge$GEOID
median_income<-df.merge$median_income
pop_density<-df.merge$pop_density
house_age<-df.merge$house_age
standing_water_outside_ratio<-df.merge$standing_water_outside_ratio
standing_water_outside<-df.merge$standing_water_outside
total_ac_wgt<-df.merge$total_ac_wgt
screened_windows_doors_sum<-df.merge$screened_windows_doors_sum
outdoor_area<-df.merge$outdoor_area
air_conditioning_3<-df.merge$air_conditioning_3
rain_exposed_containers<-df.merge$rain_exposed_containers
number_potted_plants_outside<-df.merge$number_potted_plants_outside
number_potted_plants_inside<-df.merge$number_potted_plants_inside
total_person_hours_outside_wgt<-df.merge$total_person_hours_outside_wgt
mosquito_collector_outside<-df.merge$mosquito_collector_outside
mosquito_collector_outside<-relevel(mosquito_collector_outside, ref = "Marisa")
mosquito_collector_inside<-df.merge$mosquito_collector_inside
mosquito_collector_inside<-relevel(mosquito_collector_inside, ref = "Marisa")
avg.temp<-df.merge$avg.temp.7.days.prior
collection_date<-df.merge$date_of_visit.number.days
city<-df.merge$city
df.inside<-df.merge[!is.na(df.merge$total_aegypti_inside_10),]
city<-droplevels(city)
df.inside$city<-droplevels(df.inside$city)
levels(city)
levels(df.inside$city)
###Read in dataframe that contains bite inside variable and merge it with df.reg
df.bite<-as.data.frame(readRDS("bite_inside.RDS"))
library(dplyr)
df.reg<-df.reg %>%
left_join( df.bite, by = "collection_id")
df.reg$bite_inside<-df.reg$bite_inside %>% factor(ordered = FALSE) %>% relevel(ref="no")
df.reg$bite_inside <- relevel(df.reg$bite_inside,ref = "no")
##merge df.reg with census data
df.reg <- df.census%>%
dplyr::select(city, median_income, pop_density, GEOID) %>%
distinct() %>%
right_join(df.reg, by = "GEOID")
final.mod<-glmer(total_aegypti_outside_10~mosquito_collector_outside+avg.temp+collection_date+
yard_maintenance_times_per_month + outdoor_area + standing_water_outside_ratio + house_age +  total_ac_wgt +
median_income+(1|GEOID),
family = "poisson",control=glmerControl(optimizer="bobyqa"))
summary(final.mod, correlation = TRUE)
sd(median_income)
sd(df.reg$median_income)
sd(df.reg$pop_density)
summary(df.reg$pop_density)
sqrt(2589988.110336)
sd(df.reg$outdoor_area)
sd(outdoor_area)
##Bring in data
df.imp<-readRDS("imputation_dataframe_one_imp_inside_outside.RDS")
##trying it without the first observation (number 9, where susanne collected mosquitoes, first sample)
df.imp<-df.imp[-9,]
#df.imp<-mice::complete(df.imp)
df.imp$wear_repellent_all_some_none<-as.factor(df.imp$wear_repellent_all_some_none)
##Code outlier for person hours to NA->no difference in predictive power or of significance
which(df.imp$total_person_hours_outside_wgt>100)
df.imp$total_person_hours_outside_wgt[69]<-NA
##Code total pet hours to max value of total pet hours after removing the original. This was the house I surveyed with about 80 birds outside.
max(df.imp$total_pet_hours_outside, na.rm=TRUE)
which(df.imp$total_pet_hours_outside>250)
df.imp$total_pet_hours_outside[135]<-240
df.reg<-df.imp
rm(df.imp)
##setting up format of variables
df.reg$wear_repellent_all_some_none<-factor(df.reg$wear_repellent_all_some_none, ordered=FALSE)
df.reg$wear_repellent_all_some_none <- relevel(df.reg$wear_repellent_all_some_none, ref = "none")
df.reg$air_conditioning_3<-factor(df.reg$air_conditioning_3, ordered=FALSE)
library(plyr)
##Tested whether combinging types of air conditioning had an effect, it does not and makes the variable insignificant
#df.reg$air_conditioning_3 <- revalue(df.reg$air_conditioning_3,  c("partial"="partial_central", "central"="partial_central"))
df.reg$air_conditioning_3 <- relevel(df.reg$air_conditioning_3,ref = "none")
df.reg$total_person_hours_outside_wgt[is.na(df.reg$total_person_hours_outside_wgt)]<-0
##Creating data frames to normalize continuous variables
df.no.scale<-df.reg[,c(1:5,26:28)]
df.scale<-df.reg[,c(6:25,29:31)]
##Take out the containers with larvae and pupae in it
df.reg<-df.reg[,-15]
df.scale<-df.scale[,-10]
###Standardize continuous vars
num<-sapply(df.scale,is.numeric)
###Standardize continuous vars
df.scale[num]<-as.data.frame(scale(df.scale[num],center=TRUE, scale=TRUE))
##bind household contact info with scaled variables
df.scale<-cbind(df.no.scale, df.scale)
rm(df.no.scale)
###Bring in DF with census tract id in it, create a census tract level dataframe
geoid<-readRDS("GEOID_collection_ID.RDS")
df.reg<-merge(geoid, df.reg, by = "collection_id")
df.reg[is.na(df.reg$GEOID),]$GEOID<-6037551000
df.census<-readRDS("df.census.var.RDS")
summary(df.census)
df.census<-df.census[,c(1,2,7,8,11:15)]
df.census<-df.census[,-1]
df.census<-df.census[-9,]
###filling in the census tract data for the observation that was not originally geocoded: DOW005-> same census tract at DOW015
df.census[is.na(df.census$GEOID),]$GEOID<-6037551000
df.census[df.census$GEOID==6037551000,]$median_income <-72927
df.census[df.census$GEOID==6037551000,]$pop_density <-7909.9
#df.census<-unique(df.census)
df.scaled.census<-readRDS("df.scaled.mean.census.var.RDS")
df.scaled.census<-df.scaled.census[,c(1,2,7:9,12:15)]
df.scaled.census<-df.scaled.census[,-1]
df.scaled.census[is.na(df.scaled.census$GEOID),]$GEOID<-6037551000
df.scaled.census[df.scaled.census$GEOID==6037551000,]$median_income <-0.7224535
df.scaled.census[df.scaled.census$GEOID==6037551000,]$pop_density <- -0.38155650
df.scale<-merge(geoid, df.scale, by = "collection_id")
df.scale[is.na(df.scale$GEOID),]$GEOID<-6037551000
#df.scaled.census<-unique(df.scaled.census)
library(dplyr)
df.reg$GEOID<-as.factor(df.reg$GEOID)
df.scale$GEOID<-as.factor(df.scale$GEOID)
df.census$GEOID<-as.factor(df.census$GEOID)
df.merge <- df.scaled.census%>%
dplyr::select(city, median_income, pop_density, GEOID) %>%
distinct() %>%
right_join(df.scale, by = "GEOID")
library(lme4)
library(arm)
##create vectors for all of the variables to use in hierarchical models
total_aegypti_outside_10<-df.merge$total_aegypti_outside_10
total_aegypti_inside_10<-df.merge$total_aegypti_inside_10
yard_maintenance_times_per_month<-df.merge$yard_maintenance_times_per_month
GEOID<-df.merge$GEOID
median_income<-df.merge$median_income
pop_density<-df.merge$pop_density
house_age<-df.merge$house_age
standing_water_outside_ratio<-df.merge$standing_water_outside_ratio
standing_water_outside<-df.merge$standing_water_outside
total_ac_wgt<-df.merge$total_ac_wgt
screened_windows_doors_sum<-df.merge$screened_windows_doors_sum
outdoor_area<-df.merge$outdoor_area
air_conditioning_3<-df.merge$air_conditioning_3
rain_exposed_containers<-df.merge$rain_exposed_containers
number_potted_plants_outside<-df.merge$number_potted_plants_outside
number_potted_plants_inside<-df.merge$number_potted_plants_inside
total_person_hours_outside_wgt<-df.merge$total_person_hours_outside_wgt
mosquito_collector_outside<-df.merge$mosquito_collector_outside
mosquito_collector_outside<-relevel(mosquito_collector_outside, ref = "Marisa")
mosquito_collector_inside<-df.merge$mosquito_collector_inside
mosquito_collector_inside<-relevel(mosquito_collector_inside, ref = "Marisa")
avg.temp<-df.merge$avg.temp.7.days.prior
collection_date<-df.merge$date_of_visit.number.days
city<-df.merge$city
df.inside<-df.merge[!is.na(df.merge$total_aegypti_inside_10),]
city<-droplevels(city)
df.inside$city<-droplevels(df.inside$city)
levels(city)
levels(df.inside$city)
###Read in dataframe that contains bite inside variable and merge it with df.reg
df.bite<-as.data.frame(readRDS("bite_inside.RDS"))
library(dplyr)
df.reg<-df.reg %>%
left_join( df.bite, by = "collection_id")
df.reg$bite_inside<-df.reg$bite_inside %>% factor(ordered = FALSE) %>% relevel(ref="no")
df.reg$bite_inside <- relevel(df.reg$bite_inside,ref = "no")
##merge df.reg with census data
df.reg <- df.census%>%
dplyr::select(city, median_income, pop_density, GEOID) %>%
distinct() %>%
right_join(df.reg, by = "GEOID")
final.mod<-glmer(total_aegypti_outside_10~mosquito_collector_outside+avg.temp+collection_date+
yard_maintenance_times_per_month + outdoor_area + standing_water_outside_ratio + house_age +  total_ac_wgt +
median_income+(1|GEOID),
family = "poisson",control=glmerControl(optimizer="bobyqa"))
summary(final.mod, correlation = TRUE)
final.mod<-glmer(total_aegypti_outside_10~mosquito_collector_outside+avg.temp+collection_date+
yard_maintenance_times_per_month +  standing_water_outside_ratio + house_age +  total_ac_wgt +
median_income+(1|GEOID),
family = "poisson",control=glmerControl(optimizer="bobyqa"))
summary(final.mod, correlation = TRUE)
final.mod<-glmer(total_aegypti_outside_10~mosquito_collector_outside+avg.temp+collection_date+
yard_maintenance_times_per_month + outdoor_area + standing_water_outside_ratio + house_age +  total_ac_wgt +
median_income+(1|GEOID),
family = "poisson",control=glmerControl(optimizer="bobyqa"))
summary(final.mod, correlation = TRUE)
cor.test(median_income, outdoor_area)
final.mod<-glmer(total_aegypti_outside_10~mosquito_collector_outside+avg.temp+collection_date+
yard_maintenance_times_per_month + outdoor_area + standing_water_outside_ratio + house_age +  total_ac_wgt +
(1|GEOID),
family = "poisson",control=glmerControl(optimizer="bobyqa"))
summary(final.mod, correlation = TRUE)
final.mod<-glmer(total_aegypti_outside_10~mosquito_collector_outside+avg.temp+collection_date+
yard_maintenance_times_per_month + outdoor_area + standing_water_outside_ratio + house_age +  total_ac_wgt +
median_income+(1|GEOID),
family = "poisson",control=glmerControl(optimizer="bobyqa"))
summary(final.mod, correlation = TRUE)
final.mod<-glmer(total_aegypti_outside_10~mosquito_collector_outside+avg.temp+collection_date+
yard_maintenance_times_per_month + outdoor_area + standing_water_outside_ratio + house_age +  total_ac_wgt +
median_income+(1|GEOID),
family = "poisson",control=glmerControl(optimizer="bobyqa"))
summary(final.mod, correlation = TRUE)
final.mod<-glmer(total_aegypti_outside_10~mosquito_collector_outside+avg.temp+collection_date+
yard_maintenance_times_per_month + outdoor_area + standing_water_outside_ratio + house_age +  total_ac_wgt +
(1|GEOID),
family = "poisson",control=glmerControl(optimizer="bobyqa"))
summary(final.mod, correlation = TRUE)
final.mod<-glmer(total_aegypti_outside_10~mosquito_collector_outside+avg.temp+collection_date+
yard_maintenance_times_per_month + outdoor_area + standing_water_outside_ratio + house_age +  total_ac_wgt +
median_income+(1|GEOID),
family = "poisson",control=glmerControl(optimizer="bobyqa"))
summary(final.mod, correlation = TRUE)
final.mod<-glmer(total_aegypti_outside_10~mosquito_collector_outside+avg.temp+collection_date+
yard_maintenance_times_per_month + standing_water_outside_ratio + house_age +  total_ac_wgt +
median_income+(1|GEOID),
family = "poisson",control=glmerControl(optimizer="bobyqa"))
summary(final.mod, correlation = TRUE)
final.mod<-glmer(total_aegypti_outside_10~mosquito_collector_outside+avg.temp+collection_date+
yard_maintenance_times_per_month + outdoor_area + standing_water_outside_ratio + house_age +  total_ac_wgt +
median_income+(1|GEOID),
family = "poisson",control=glmerControl(optimizer="bobyqa"))
summary(final.mod, correlation = TRUE)
final.mod<-glmer(total_aegypti_outside_10~mosquito_collector_outside+avg.temp+collection_date+
outdoor_area + standing_water_outside_ratio + house_age +  total_ac_wgt +
median_income+(1|GEOID),
family = "poisson",control=glmerControl(optimizer="bobyqa"))
summary(final.mod, correlation = TRUE)
final.mod<-glmer(total_aegypti_outside_10~mosquito_collector_outside+avg.temp+collection_date+
yard_maintenance_times_per_month + outdoor_area + standing_water_outside_ratio + house_age +  total_ac_wgt +
median_income+(1|GEOID),
family = "poisson",control=glmerControl(optimizer="bobyqa"))
summary(final.mod, correlation = TRUE)
final.mod<-glmer(total_aegypti_outside_10~mosquito_collector_outside+avg.temp+collection_date+
yard_maintenance_times_per_month + standing_water_outside_ratio + house_age +  total_ac_wgt +
median_income+(1|GEOID),
family = "poisson",control=glmerControl(optimizer="bobyqa"))
summary(final.mod, correlation = TRUE)
final.mod<-glmer(total_aegypti_outside_10~mosquito_collector_outside+avg.temp+collection_date+
yard_maintenance_times_per_month + outdoor_area + standing_water_outside_ratio + house_age +  total_ac_wgt +
median_income+(1|GEOID),
family = "poisson",control=glmerControl(optimizer="bobyqa"))
summary(final.mod, correlation = TRUE)
final.mod<-glmer(total_aegypti_outside_10~mosquito_collector_outside+avg.temp+collection_date+
outdoor_area + standing_water_outside_ratio + house_age +  total_ac_wgt +
median_income+(1|GEOID),
family = "poisson",control=glmerControl(optimizer="bobyqa"))
summary(final.mod, correlation = TRUE)
final.mod<-glmer(total_aegypti_outside_10~mosquito_collector_outside+avg.temp+collection_date+
yard_maintenance_times_per_month + outdoor_area + standing_water_outside_ratio + house_age +  total_ac_wgt +
median_income+(1|GEOID),
family = "poisson",control=glmerControl(optimizer="bobyqa"))
summary(final.mod, correlation = TRUE)
cor.test(df.reg$median_income, df.reg$outdoor_area)
cor.test(df.reg$median_income, df.reg$outdoor_area)
cor.test(median_income, outdoor_area)
vif.mer <- function (fit) {
## adapted from rms::vif
v <- vcov(fit)
nam <- names(fixef(fit))
## exclude intercepts
ns <- sum(1 * (nam == "Intercept" | nam == "(Intercept)"))
if (ns > 0) {
v <- v[-(1:ns), -(1:ns), drop = FALSE]
nam <- nam[-(1:ns)]
}
d <- diag(v)^0.5
v <- diag(solve(v/(d %o% d)))
names(v) <- nam
v
}
vif.mer(final.mod)
vif.mer <- function (fit) {
## adapted from rms::vif
v <- vcov(fit)
nam <- names(fixef(fit))
## exclude intercepts
ns <- sum(1 * (nam == "Intercept" | nam == "(Intercept)"))
if (ns > 0) {
v <- v[-(1:ns), -(1:ns), drop = FALSE]
nam <- nam[-(1:ns)]
}
d <- diag(v)^0.5
v <- diag(solve(v/(d %o% d)))
names(v) <- nam
v
}
vif.mer(final.mod)
rm(list = ls())
library(ncdf4)
library(tidyverse)
setwd('~/Desktop/GitHub/CDPH_heat_project/')
tempMat <- c("tasmax")
names(tempMat) <- c("Daily max temp")
library(ncdf4)
library(tidyverse)
setwd('~/Desktop/GitHub/CDPH_heat_project/')
tempMat <- c("tasmax")
names(tempMat) <- c("Daily max temp")
rcpMat <- c("45","85")
names(rcpMat) <- c("RCP4.5 (emissions peak 2040, stabiliazation by 2100)","RCP8.5 (emissions continue to rise throughout the 21st century)")
modelMat <- c("ACCESS1-0","CanESM2","CCSM4","CESM1-BGC","CMCC-CMS","CNRM-CM5","GFDL-CM3","HadGEM2-CC","HadGEM2-ES","MIROC5")
names(modelMat) <- c("ACCESS1-0","CanESM2","CCSM4","CESM1-BGC","CMCC-CMS","CNRM-CM5","GFDL-CM3","HadGEM2-CC","HadGEM2-ES","MIROC5")
yearStartMat <- c("20300101")
names(yearStartMat) <- c("20300101")
yearStopMat <- c("20301231")
names(yearStopMat) <- c("20301231")
n<-4
modelVar<-n
rcpVar<-1
tempVar<-1
yearStartVar<-1
yearStopVar<-1
model <- modelMat[modelVar]
rcp <- rcpMat[rcpVar]
temp <- tempMat[tempVar]
yearStart<-yearStartMat[yearStartVar]
yearStop<-yearStopMat[yearStopVar]
###What is dname???
dname = "hectares"
##for CCSM$ you need to change r1i1p1 to r6i1p1
ncdfURL <- paste0("http://albers.cnr.berkeley.edu/data/scripps/loca/",model,"/rcp",rcp,"/",temp,"/",temp,"_day_",model,"_rcp",rcp,"_r1i1p1_",yearStart,"-",yearStop,".LOCA_2016-04-02.16th.CA_NV.nc")
dest <-  paste0("~/Desktop/GitHub/CDPH_heat_project/data/",model,"_rcp",rcp,"_",temp,"_",yearStart,"_",yearStop,"_","CA_NV.nc")
download.file(url=ncdfURL,destfile=dest, mode = "wb")
ncin <- nc_open(dest)
# store values from variables and atributes
attributes(ncin$dim)$names
nc_lat <- ncvar_get(ncin, "lat")
n_lat <- dim(nc_lat)
nc_lon <- ncvar_get(ncin, "lon")
n_lon <- dim(nc_lon)
nc_year <- ncvar_get(ncin, "time")+1953
n_year <- dim(nc_year)
# get hectares
tmp_array <- ncvar_get(ncin,dname)
rcpVar<- c("45")
rcpMat[1]
rcpVar<- c("45")
tempVar<-c("tasmax")
YearStartVar<-c("20300101")
YearStopVar<-c("20301231")
n<-5
modelVar<-n
model <- modelMat[modelVar]
rcp <- rcpVar
temp <- tempVar
yearStart<-YearStartVar
yearStop<-YearStopVar
###What is dname???
dname = "hectares"
##for CCSM$ you need to change r1i1p1 to r6i1p1
ncdfURL <- paste0("http://albers.cnr.berkeley.edu/data/scripps/loca/",model,"/rcp",rcp,"/",temp,"/",temp,"_day_",model,"_rcp",rcp,"_r1i1p1_",yearStart,"-",yearStop,".LOCA_2016-04-02.16th.CA_NV.nc")
dest <-  paste0("~/Desktop/GitHub/CDPH_heat_project/data/",model,"_rcp",rcp,"_",temp,"_",yearStart,"_",yearStop,"_","CA_NV.nc")
download.file(url=ncdfURL,destfile=dest, mode = "wb")
process_single_nc <- function(modelVar, rcpVar, tempVar,YearStartVar,YearStopVar){
# n<-5
# modelVar<-n
model <- modelVar
rcp <- rcpVar
temp <- tempVar
yearStart<-YearStartVar
yearStop<-YearStopVar
###What is dname???
dname = "hectares"
##for CCSM$ you need to change r1i1p1 to r6i1p1
ncdfURL <- paste0("http://albers.cnr.berkeley.edu/data/scripps/loca/",model,"/rcp",rcp,"/",temp,"/",temp,"_day_",model,"_rcp",rcp,"_r1i1p1_",yearStart,"-",yearStop,".LOCA_2016-04-02.16th.CA_NV.nc")
dest <-  paste0("~/Desktop/GitHub/CDPH_heat_project/data/",model,"_rcp",rcp,"_",temp,"_",yearStart,"_",yearStop,"_","CA_NV.nc")
download.file(url=ncdfURL,destfile=dest, mode = "wb")
}
download_nc <- function(modelVar, rcpVar, tempVar,YearStartVar,YearStopVar){
# n<-5
# modelVar<-n
model <- modelVar
rcp <- rcpVar
temp <- tempVar
yearStart<-YearStartVar
yearStop<-YearStopVar
###What is dname???
dname = "hectares"
##for CCSM$ you need to change r1i1p1 to r6i1p1
ncdfURL <- paste0("http://albers.cnr.berkeley.edu/data/scripps/loca/",model,"/rcp",rcp,"/",temp,"/",temp,"_day_",model,"_rcp",rcp,"_r1i1p1_",yearStart,"-",yearStop,".LOCA_2016-04-02.16th.CA_NV.nc")
dest <-  paste0("~/Desktop/GitHub/CDPH_heat_project/data/",model,"_rcp",rcp,"_",temp,"_",yearStart,"_",yearStop,"_","CA_NV.nc")
download.file(url=ncdfURL,destfile=dest, mode = "wb")
}
lapply(modelMat, download_nc)
rcpVar<- c("45")
tempVar<-c("tasmax")
YearStartVar<-c("20300101")
YearStopVar<-c("20301231")
download_nc <- function(modelVar, rcpVar, tempVar,YearStartVar,YearStopVar){
# n<-5
# modelVar<-n
model <- modelVar
rcp <- rcpVar
temp <- tempVar
yearStart<-YearStartVar
yearStop<-YearStopVar
###What is dname???
dname = "hectares"
##for CCSM$ you need to change r1i1p1 to r6i1p1
ncdfURL <- paste0("http://albers.cnr.berkeley.edu/data/scripps/loca/",model,"/rcp",rcp,"/",temp,"/",temp,"_day_",model,"_rcp",rcp,"_r1i1p1_",yearStart,"-",yearStop,".LOCA_2016-04-02.16th.CA_NV.nc")
dest <-  paste0("~/Desktop/GitHub/CDPH_heat_project/data/",model,"_rcp",rcp,"_",temp,"_",yearStart,"_",yearStop,"_","CA_NV.nc")
download.file(url=ncdfURL,destfile=dest, mode = "wb")
}
lapply(modelMat, download_nc)
lapply(modelMat, download_nc(rcpVar, tempVar,YearStartVar,YearStopVar))
lapply(modelMat, download_nc(rcpVar=c("45"), tempVar=c("tasmax"),YearStartVar=c("20300101"),YearStopVarc("20301231")))
download_nc <- function(modelVar, rcpVar, tempVar,YearStartVar,YearStopVar){
# n<-5
# modelVar<-n
model <- modelVar
rcp <- rcpVar
temp <- tempVar
yearStart<-YearStartVar
yearStop<-YearStopVar
###What is dname???
dname = "hectares"
##for CCSM$ you need to change r1i1p1 to r6i1p1
ncdfURL <- paste0("http://albers.cnr.berkeley.edu/data/scripps/loca/",model,"/rcp",rcp,"/",temp,"/",temp,"_day_",model,"_rcp",rcp,"_r1i1p1_",yearStart,"-",yearStop,".LOCA_2016-04-02.16th.CA_NV.nc")
dest <-  paste0("~/Desktop/GitHub/CDPH_heat_project/data/",model,"_rcp",rcp,"_",temp,"_",yearStart,"_",yearStop,"_","CA_NV.nc")
download.file(url=ncdfURL,destfile=dest, mode = "wb")
}
lapply(modelMat, download_nc(rcpVar=c("45"), tempVar=c("tasmax"),YearStartVar=c("20300101"),YearStopVarc("20301231")))
lapply(modelMat, download_nc(rcpVar=c("45"), tempVar=c("tasmax"),YearStartVar=c("20300101"),YearStopVar=c("20301231")))
lapply(modelMat, download_nc, rcpVar=rcpVar, tempVar=tempVar,YearStartVar=YearStartVar,YearStopVar=YearStopVar)
modelMat <- c("ACCESS1-0","CanESM2","CESM1-BGC","CMCC-CMS","CNRM-CM5","GFDL-CM3","HadGEM2-CC","HadGEM2-ES","MIROC5")
names(modelMat) <- c("ACCESS1-0","CanESM2","CCSM4","CESM1-BGC","CMCC-CMS","CNRM-CM5","GFDL-CM3","HadGEM2-CC","HadGEM2-ES","MIROC5")
names(modelMat) <- c("ACCESS1-0","CanESM2","CESM1-BGC","CMCC-CMS","CNRM-CM5","GFDL-CM3","HadGEM2-CC","HadGEM2-ES","MIROC5")
yearStartMat <- c("20300101")
names(yearStartMat) <- c("20300101")
yearStopMat <- c("20301231")
names(yearStopMat) <- c("20301231")
rcpVar<- c("45")
tempVar<-c("tasmax")
YearStartVar<-c("20300101")
YearStopVar<-c("20301231")
download_nc <- function(modelVar, rcpVar, tempVar,YearStartVar,YearStopVar){
# n<-5
# modelVar<-n
model <- modelVar
rcp <- rcpVar
temp <- tempVar
yearStart<-YearStartVar
yearStop<-YearStopVar
###What is dname???
dname = "hectares"
##for CCSM$ you need to change r1i1p1 to r6i1p1
ncdfURL <- paste0("http://albers.cnr.berkeley.edu/data/scripps/loca/",model,"/rcp",rcp,"/",temp,"/",temp,"_day_",model,"_rcp",rcp,"_r1i1p1_",yearStart,"-",yearStop,".LOCA_2016-04-02.16th.CA_NV.nc")
dest <-  paste0("~/Desktop/GitHub/CDPH_heat_project/data/",model,"_rcp",rcp,"_",temp,"_",yearStart,"_",yearStop,"_","CA_NV.nc")
download.file(url=ncdfURL,destfile=dest, mode = "wb")
}
lapply(modelMat, download_nc, rcpVar=rcpVar, tempVar=tempVar,YearStartVar=YearStartVar,YearStopVar=YearStopVar)
rcpVar<- c("85")
tempVar<-c("tasmax")
YearStartVar<-c("20300101")
YearStopVar<-c("20301231")
lapply(modelMat, download_nc, rcpVar=rcpVar, tempVar=tempVar,YearStartVar=YearStartVar,YearStopVar=YearStopVar)
rm(list = ls())
library(ncdf4)
library(tidyverse)
setwd('~/Desktop/GitHub/CDPH_heat_project/')
tempMat <- c("tasmax")
names(tempMat) <- c("Daily max temp")
rcpMat <- c("45","85")
names(rcpMat) <- c("RCP4.5 (emissions peak 2040, stabiliazation by 2100)","RCP8.5 (emissions continue to rise throughout the 21st century)")
modelMat <- c("ACCESS1-0","CanESM2","CESM1-BGC","CMCC-CMS","CNRM-CM5","GFDL-CM3","HadGEM2-CC","HadGEM2-ES","MIROC5")
names(modelMat) <- c("ACCESS1-0","CanESM2","CESM1-BGC","CMCC-CMS","CNRM-CM5","GFDL-CM3","HadGEM2-CC","HadGEM2-ES","MIROC5")
yearStartMat <- c("20300101")
names(yearStartMat) <- c("20300101")
yearStopMat <- c("20301231")
names(yearStopMat) <- c("20301231")
download_nc <- function(modelVar, rcpVar, tempVar,YearStartVar,YearStopVar){
# n<-5
# modelVar<-n
model <- modelVar
rcp <- rcpVar
temp <- tempVar
yearStart<-YearStartVar
yearStop<-YearStopVar
###What is dname???
dname = "hectares"
##for CCSM$ you need to change r1i1p1 to r6i1p1
ncdfURL <- paste0("http://albers.cnr.berkeley.edu/data/scripps/loca/",model,"/rcp",rcp,"/",temp,"/",temp,"_day_",model,"_rcp",rcp,"_r1i1p1_",yearStart,"-",yearStop,".LOCA_2016-04-02.16th.CA_NV.nc")
dest <-  paste0("~/Desktop/GitHub/CDPH_heat_project/data/",model,"_rcp",rcp,"_",temp,"_",yearStart,"_",yearStop,"_","CA_NV.nc")
download.file(url=ncdfURL,destfile=dest, mode = "wb")
}
rcpVar<- c("85")
tempVar<-c("tasmax")
YearStartVar<-c("20300101")
YearStopVar<-c("20301231")
lapply(modelMat, download_nc, rcpVar=rcpVar, tempVar=tempVar,YearStartVar=YearStartVar,YearStopVar=YearStopVar)
